{"version":3,"sources":["webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://gatsby-minimal-simple-blog/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://gatsby-minimal-simple-blog/./src/components/Bio/Bio.js","webpack://gatsby-minimal-simple-blog/./src/components/Seo/Seo.js","webpack://gatsby-minimal-simple-blog/./src/components/Tag/Tag.js","webpack://gatsby-minimal-simple-blog/./src/components/TagList/TagList.js","webpack://gatsby-minimal-simple-blog/./src/components/TranslationsLink/TranslationsLink.js","webpack://gatsby-minimal-simple-blog/./src/components/Toc/Toc.js","webpack://gatsby-minimal-simple-blog/./src/templates/blog-post.js","webpack://gatsby-minimal-simple-blog/./src/utils/helpers.js","webpack://gatsby-minimal-simple-blog/./src/utils/i18n.js"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","iter","Symbol","iterator","Object","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","prototype","toString","call","slice","constructor","name","test","data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","href","twitter","summary","Seo","description","lang","meta","title","metaDescription","defaultTitle","Helmet","htmlAttributes","titleTemplate","content","property","concat","defaultProps","Tag","countPart","url","text","count","Link","to","TagList","tags","baseUrl","map","key","reduce","prev","curr","translationsLink","restProps","langKey","formatMessage","headings","dangerouslySetInnerHTML","__html","pageContext","location","post","markdownRemark","siteTitle","previous","next","useLang","homeLink","frontmatter","Layout","excerpt","itemScope","itemType","itemProp","date","fields","readingTime","style","margin","toc","tableOfContents","html","Bio","display","flexWrap","justifyContent","listStyle","padding","slug","rel","formatReadingTime","minutes","roundedMinutes","Math","round","cups","E","fill","join","formatPostDate","Date","toLocaleDateString","args","day","month","year","filter","Boolean","haveSameItem","arr1","s","Set","getPreviousNextNode","posts","fromInd","node","kebabCase","isAlphabetNum","match","x","toLowerCase","replace","msgId","messages","msg","console","error"],"mappings":"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","file":"component---src-templates-blog-post-js-37ba90b5d15c9fd41c23.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../../images/profile-pic.jpeg\"\n        width={80}\n        height={80}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Personal blog by  {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            {author.name}\n          </a>\n          <br />\n          {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import './Tag.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'gatsby';\n\nfunction Tag({ url, text, count, ...restProps }) {\n  let countPart;\n  if (count != null) {\n    countPart = `  (${count})`;\n  }\n  return (\n    <Link className=\"tag\" to={url}>\n        #{text}\n        {countPart}\n    </Link>\n  );\n}\n\nTag.propTypes = {\n  url: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  count: PropTypes.number,\n};\n\nTag.defaultProps = {\n  count: null,\n};\n\nexport default Tag;\n","import './TagList.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tag from '../Tag';\n\nfunction TagList({ tags, baseUrl, ...restProps }) {\n  return (\n    <span className=\"tags\">\n      {tags\n        .map(text => <Tag key={text} text={text} url={`${baseUrl}/${text}`} />)\n        .reduce((prev, curr) => [ prev, ', ', curr ])\n      }\n    </span>\n  );\n}\n\nTagList.propTypes = {\n  tags: PropTypes.array.isRequired,\n  baseUrl: PropTypes.string,\n};\n\nTagList.defaultProps = {\n  baseUrl: '',\n};\n\nexport default TagList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'gatsby';\nimport { formatMessage } from '../../utils/i18n';\n\nimport './TranslationsLink.css';\n\nfunction TranslationsLink({ translationsLink, langKey, ...restProps }) {\n  if (translationsLink == null || translationsLink.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"translation-root\" {...restProps}>\n      {formatMessage('tTransationAvailable')}\n      {translationsLink.map(({ name, url }) => (\n        <Link key={name} to={url} className=\"translation-link\">\n          {name}\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nTranslationsLink.propTypes = {\n  translationsLink: PropTypes.array.isRequired,\n  langKey: PropTypes.string.isRequired,\n};\n\nexport default TranslationsLink;\n","import './Toc.css'\nimport * as React from 'react'\nimport PropTypes from 'prop-types';\n\nfunction Toc({ headings }) {\n  return (\n    <div className=\"toc\">\n      <h4>Table of Contents</h4>\n      <nav\n        dangerouslySetInnerHTML={{ __html: headings }}        \n      />\n    </div>\n  )\n}\n\nToc.propTypes = {\n  headings: PropTypes.string.isRequired,\n}\n\nexport default Toc","import * as React from \"react\"\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"components/Bio\"\nimport Layout from \"components/Layout\"\nimport Seo from \"components/Seo\"\nimport TagList from 'components/TagList'\nimport TranslationsLink from 'components/TranslationsLink'\nimport Toc from 'components/Toc';\n\nimport { useLang } from 'context/LanguageContext'\n\nconst BlogPost = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next, translationsLink } = pageContext\n\n  const { lang, homeLink } = useLang()\n\n  let tags;\n  if (post.frontmatter.tags) {\n    tags = <TagList tags={post.frontmatter.tags} baseUrl={`${homeLink}tags`} />\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>\n            <span className=\"published-date\">{post.frontmatter.date}</span> • <span className=\"reading-time\">{post.fields.readingTime.text}</span> • {tags}\n          </p>\n          <TranslationsLink\n            translationsLink={translationsLink}\n            langKey={lang}\n            style={{ margin: '-0.5rem 0 1.5rem' }}\n          />\n        </header>\n        {post.frontmatter.toc && !!post.tableOfContents && <Toc headings={post.tableOfContents} />}\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        lang\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      tableOfContents\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n        toc\n      }\n      fields {\n        readingTime {\n          text\n        }\n        langKey\n      }\n    }\n  }\n`;\n","function formatReadingTime(minutes) {\n  const roundedMinutes = Math.round(minutes)\n  const cups = Math.round(minutes / 5);\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E)).fill('🍱').join('')} ${roundedMinutes} min read`;\n  }\n  return `${new Array(cups || 1).fill('☕️').join('')} ${roundedMinutes} min read`;\n}\n\n// `lang` is optional and will default to the current user agent locale\nfunction formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [lang, { day: 'numeric', month: 'long', year: 'numeric' }].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n\nfunction haveSameItem(arr1 = [], arr2 = []) {\n  if (arr1 == null || arr2 == null) {\n    // false for no tags\n    return false;\n  }\n  const s = new Set([...arr1, ...arr2]);\n  const uniques = [...s];\n\n  return uniques.length < arr1.length + arr2.length;\n}\n\nfunction getPreviousNextNode(posts, fromInd) {\n  let previous;\n  let next;\n  if (posts.length > 0 && fromInd > -1) {\n    previous = fromInd <= 0 ? null : posts[fromInd - 1].node;\n    next = fromInd === posts.length - 1 ? null : posts[fromInd + 1].node;\n  }\n\n  return {\n    previous,\n    next,\n  };\n}\n\nconst isAlphabetNum = s =>\n  /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g.test(s);\n\nfunction kebabCase(s) {\n  if (isAlphabetNum(s)) {\n    return s\n      .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n      .map(x => x.toLowerCase())\n      .join('-');\n  }\n\n  return s\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/[\\s_]+/g, '-')\n    .toLowerCase();\n}\n\nmodule.exports = {\n  formatReadingTime,\n  formatPostDate,\n  haveSameItem,\n  getPreviousNextNode,\n  kebabCase,\n};\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { useLang } from '../context/LanguageContext';\nimport { formatPostDate } from './helpers';\n\nconst formatMessage = (msgId, ...args) => {\n  const { lang, messages } = useLang();\n\n  const msg = messages[msgId];\n\n  if (msg == null) {\n    console.error(`MessageId [${msgId}] is not exist!!\n    You should add it to config/locales/${lang}.js`);\n    return msgId;\n  }\n\n  if (typeof msg === 'function') {\n    return msg(...args);\n  }\n\n  return msg;\n};\n\nconst formatDate = dateStr => {\n  const { lang } = useLang();\n\n  return formatPostDate(dateStr, lang);\n};\n\nexport { formatMessage, formatDate };\n"],"sourceRoot":""}